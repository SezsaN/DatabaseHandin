// <auto-generated />
using Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Enteties.BirthDatesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirthDay")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("BirthMonth")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("BirthDates");
                });

            modelBuilder.Entity("Infrastructure.Enteties.ClubsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrentClub")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstClub")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("Infrastructure.Enteties.HockeyPlayersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BirthDateId")
                        .HasColumnType("int");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirthDateId");

                    b.HasIndex("ClubId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PositionId");

                    b.ToTable("HockeyPlayers");
                });

            modelBuilder.Entity("Infrastructure.Enteties.NationalitiesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("Infrastructure.Enteties.PositionsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Infrastructure.Enteties.HockeyPlayersEntity", b =>
                {
                    b.HasOne("Infrastructure.Enteties.BirthDatesEntity", "BirthDate")
                        .WithMany("HockeyPlayers")
                        .HasForeignKey("BirthDateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Enteties.ClubsEntity", "Club")
                        .WithMany("HockeyPlayers")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Enteties.NationalitiesEntity", "Nationality")
                        .WithMany("HockeyPlayers")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Enteties.PositionsEntity", "Position")
                        .WithMany("HockeyPlayers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BirthDate");

                    b.Navigation("Club");

                    b.Navigation("Nationality");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Infrastructure.Enteties.BirthDatesEntity", b =>
                {
                    b.Navigation("HockeyPlayers");
                });

            modelBuilder.Entity("Infrastructure.Enteties.ClubsEntity", b =>
                {
                    b.Navigation("HockeyPlayers");
                });

            modelBuilder.Entity("Infrastructure.Enteties.NationalitiesEntity", b =>
                {
                    b.Navigation("HockeyPlayers");
                });

            modelBuilder.Entity("Infrastructure.Enteties.PositionsEntity", b =>
                {
                    b.Navigation("HockeyPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
